// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PillDispenserWeb.Models;
using System;

namespace PillDispenserWeb.Migrations.AppData
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20171118074605_PatientDoctorManyToMany")]
    partial class PatientDoctorManyToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PillDispenserWeb.Models.DataTypes.Doctor", b =>
                {
                    b.Property<long>("DoctorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("PillDispenserWeb.Models.DataTypes.Medication", b =>
                {
                    b.Property<string>("MedicationId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("DosageInMg");

                    b.Property<string>("PlaintextName");

                    b.HasKey("MedicationId");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("PillDispenserWeb.Models.DataTypes.Patient", b =>
                {
                    b.Property<long>("PatientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PillDispenserWeb.Models.Relations.PatientDoctor", b =>
                {
                    b.Property<long>("PatientId");

                    b.Property<long>("DoctorId");

                    b.HasKey("PatientId", "DoctorId");

                    b.HasIndex("DoctorId");

                    b.ToTable("PatientDoctor");
                });

            modelBuilder.Entity("PillDispenserWeb.Models.Relations.PatientDoctor", b =>
                {
                    b.HasOne("PillDispenserWeb.Models.DataTypes.Doctor", "Doctor")
                        .WithMany("Patients")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PillDispenserWeb.Models.DataTypes.Patient", "Patient")
                        .WithMany("Doctors")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
